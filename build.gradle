plugins {
    id 'java'
    id 'application'
    id 'net.researchgate.release' version '2.6.0'
    id 'com.github.ben-manes.versions' version '0.15.0'
    id 'org.springframework.boot' version '1.5.3.RELEASE'
    id 'nebula.ospackage' version '4.4.0'
    id 'org.hidetake.ssh' version '2.9.0'
}

group 'com.ianhattendorf.sensi'
version '1.0-SNAPSHOT'
description 'Monitor Sensi thermostats for changes'

sourceCompatibility = 1.8
mainClassName = 'com.ianhattendorf.sensi.sensimonitor.Application'

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.ianhattendorf.sensi:sensi-api:1.0',
            'org.springframework.boot:spring-boot-starter-data-jpa',
            'com.h2database:h2:1.4.195',
            'org.postgresql:postgresql:42.1.1',
            'javax.inject:javax.inject:1'

    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

//gradle.projectsEvaluated {
//    tasks.withType(JavaCompile) {
//        options.compilerArgs << "-Xlint" << "-Xlint:-serial" << "-Werror"
//    }
//    tasks.withType(Javadoc) {
//        options.addStringOption('Xdoclint:all,-missing')
//    }
//}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

tasks.withType(Tar) {
    // LZMA would be nice
    compression = Compression.BZIP2
    extension = 'tar.bz2'
}

release {
    preTagCommitMessage = '[Release]: '
    tagCommitMessage = '[Release]: tagging'
    newVersionCommitMessage = '[Release]: new snapshot version'
    tagTemplate = 'v${version}'
}

ospackage {
    release '1'
    os = LINUX
    summary description
    url 'https://github.com/ianhattendorf/sensi-monitor'

    preInstall file('rpm/preinstall.sh')
    postInstall "systemctl preset ${project.name} > /dev/null 2>&1"
    preUninstall "systemctl disable ${project.name} > /dev/null 2>&1" + '\n' +
            "systemctl stop ${project.name} > /dev/null 2>&1"
    postUninstall "systemctl daemon-reload > /dev/null 2>&1"

    requires('java-headless', '1.8', GREATER | EQUAL)

    into '/opt/sensi-monitor'

    from(jar.outputs.files) {
        into 'bin'
        rename { String fileName ->
            fileName.replace("-$project.version", '')
        }
    }
    from('src/main/resources/application-secrets.properties.example') {
        fileType CONFIG | NOREPLACE
        fileMode = 0600
        user 'sensi-monitor'
        permissionGroup 'sensi-monitor'
        into 'config'
        rename { String fileName ->
            fileName.replace('.example', '')
        }
    }
    from('src/main/resources/application.properties') {
        fileType CONFIG | NOREPLACE
        into 'config'
    }
    from('rpm/sensi-monitor.service') {
        into '/etc/systemd/system'
        addParentDirs false
        user 'root'
        permissionGroup 'root'
        fileMode = 0644
    }
}

task elRpm(type: Rpm) {
    distribution 'el7'
    release "$release.$distribution"
}

task fedoraRpm(type: Rpm) {
    distribution 'fc26'
    release "$release.$distribution"
}

task buildOSPackages {
    dependsOn elRpm
    dependsOn fedoraRpm
    dependsOn buildDeb
}

remotes {
    repoServer {
        host = 'repo'
        user = 'repo'
        agent = true
    }
}

task deploy {
    doLast {
        ssh.run {
            session(remotes.repoServer) {
                def files = fileTree('build/distributions').filter { it.name =~ /\.rpm$/ }.files
                put from: files, into: '/var/lib/repos/staging'
            }
        }
    }
}

elRpm.dependsOn build
fedoraRpm.dependsOn build
buildDeb.dependsOn build
